;; 练习1.9 下面几个过程各定义了一种加起两个正整数的方法，它们都基于
;; 过程inc(它将参数增加1)和dec(它将参数减少1)。

(define (+ a b)
  (if (= a 0)
    b
    (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
    b
    (+ (dec a) (inc b))))

;; 请用代换模型展示这两个过程在求值(+ 4 5) 时所产生的计算过程。这些计算
;; 过程是递归的或者是迭代吗？

;; 解：
;; 用替换模型来查看前一种计算过程
;; (+ 4 5)
;; (inc (+ 3 5))
;; (inc (inc (+ 2 5)))
;; (inc (inc (inc (+ 1 5))))
;; (inc (inc (inc (inc (+ 0 5)))))
;; (inc (inc (inc (inc 5))))
;; (inc (inc (inc 6)))
;; (inc (inc 7))
;; (inc 8)
;; 9
;;
;; 用替换模型来查看后一种计算过程
;; (+ 4 5)
;; (+ 3 6)
;; (+ 2 7)
;; (+ 1 8)
;; (+ 0 9)
;; 9
;;
;; 很明显前一种计算过程是递归的，后一种计算过程是迭代的。
;;
;; 那个怎么去区分一个计算过程是递归的还是迭代的？
;; 书中关于递归计算过程的描述有：
;; 
;; “这一计算过程构造起一个推迟进行的操作所形成的链条，收缩
;; 阶段表现为这些运算的实际执行。这中类型的计算过程由一个
;; 推迟执行的运算链条刻画，称为一个递归计算过程。”
;; 
;; “在做迭代和递归之间的比较时，我们必须当心，不要搞混了递归
;; 计算过程的概念和递归过程的概念。当我们说一个过程是递归的
;; 时候，论述的是一个语法形式上的事实，说明这个过程的定义中
;; (直接或间接地)引用了该过程自身。在说某一个计算过程具有某
;; 种模式时(例如，线性递归)，我们说的是这一个计算过程的进展
;; 方式，而不是相对应过程书写上的语法形式。”
;;
;; 上面是关于递归计算过程的描述，那么判断一个计算过程是递归
;; 还是迭代的，看他们的进展方式就行了(就像上面用替换模型去
;; 查看一样)，这样比较麻烦，还有没有更简单的方法呢？
;; 观察了一下上面的递归计算过程和迭代计算过程，发现他们之间
;; 的区别就是，递归计算过程在调用自身返回后还要使用自身的返回
;; 值去进行一些计算，而迭代计算过程在调用自身后直接返回值自身
;; 的值，不需要使用这个值在进行其他计算(其实这样就是上面书中
;; 所说的递归计算过程会有一条推迟执行运算链条)。
;; 
;; 用上面的例子分析就是前一种过程中在它自身返回的时候还要进行
;; inc运算，而后一个过程直接返回调用它自身所得的值。
;;
;; 看来一下书和在网上查了一下，发现原来这中怪怪的 “计算过程是
;; 迭代计算过程的递归过程” 就是传说中的 “尾递归”。
