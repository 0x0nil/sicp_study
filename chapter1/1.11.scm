;; 练习1.11 函数f由如下规则定义：如果n<3,那么f(n) = n;如果n>=3,
;; 那么f(n) = f(n-1) + 2f(n-2) + 3f(n-3)。请写一个递归计算过程
;; 计算f的过程。再写一个采用迭代计算过程计算f的过程


;; 解：
;; 递归计算过程

(define (f-recursion n)
  (cond ((< n 3) n)
        (else (+ (f-recursion (- n 1))
                 (* 2 (f-recursion (- n 2)))
                 (* 3 (f-recursion (- n 3)))))))

;; 迭代计算过程
(define (f n)
  (f-iteration 0 1 2 3 n))

(define (f-iteration a b c count n)
  (cond ((< n 3) n)
        ((> count n) c)
        ((f-iteration b c (+ (* 3 a) 
                             (* 2 b) c)
                      (+ count 1) n))))

;; 这里复习了一下练习1.9关于递归计算过程和迭代计算过程的区别:
;; 通过看他们的进展方式可以区分，还有可以通过查看它们对调用
;; 自身后的返回值的处理，如果直接返回调用自身所得的返回值，那么
;; 这个计算过程就是迭代的(尾递归),如果函数还对调用自身所得的返回
;; 再进行一些其他计算。其实这也引出了它们之间的另一个区别，就是
;; 迭代的计算过程可以把一些状态变量保存在函数中，当计算刚进入或者
;; 刚返回到这一层函数时都可以使用这些值。而迭代的计算过程，因为它
;; 是直接返回调用它自身所带的返回值的，所以它只能靠函数的参数来
;; 传递那些状态变量。
;; 这道题使用递归计算过程是写很简单，只要照着定义去写就行了。使用
;; 迭代计算过程去写的话有会有点难道，就是要找出那些能描述整个过程
;; 的各个状态的状态变量，分析他们的变化规律，然后把它们作为过程的
;; 参数在调用的时候传递。
