;; 在1.1.3节定义求值模型时我们说过，求值一个表达式的第一步就是求值其中的
;; 子表达式。但那时并没有说明应按怎样的顺序对这些子表达式求值（例如，是
;; 从左到右还是从右到左）。当我们引进赋值之后，对一个过程的各个参数的求值
;; 顺序不同就有可能导致不同的结果。请定义一个简单的过程f，使得对于
;; (+ (f 0) (f 1))的求值在对实际参数采用从左到右的求值顺序时返回0，而对
;; 实际参数采用从右到左的求值顺序是返回1.

(define (make-f)
  (let ((n 0))
    (define (proc m)
      (if (= n 0)
        (begin (set! n (+ n 1)) m)
        0))
    proc))

(define f (make-f))

(+ (f 0) (f 1))

;; 这就是一个过程的值会受到他的历史的影响的引起的。因为两个过程共享了一个变量。
